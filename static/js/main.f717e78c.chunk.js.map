{"version":3,"sources":["statistics/Statistics.js","notification/Notification.js","feedbackOptions/FeedbackOptions.js","section/Section.js","counter/Counter.js","App.js","index.js"],"names":["Statistics","good","neutral","bad","total","positivePercentage","className","Notification","message","Button","styled","button","FeedbackOptions","onCounterGood","onCounterNeutral","onCounterBad","type","onClick","Section","title","children","Counter","state","handleCounterGood","setState","prevState","handleCounterNeutral","handleCounterBad","countPositiveFeedbackPercentage","result","countTotalFeedback","percentage","Math","round","this","React","Component","App","ReactDOM","render","document","getElementById"],"mappings":"+NAyCeA,EAtCI,SAAC,GAAD,IAAEC,EAAF,EAAEA,KAAKC,EAAP,EAAOA,QAAQC,EAAf,EAAeA,IAAIC,EAAnB,EAAmBA,MAAMC,EAAzB,EAAyBA,mBAAzB,OAEf,mCACE,sBAAKC,UAAU,aAAf,UACA,sCAEE,qCAAQL,QAEV,yCAEE,qCAAQC,QAEV,qCAEE,qCAAQC,QAEV,uCAEE,qCAAQC,QAEV,qDAEE,qCAAQC,EAAR,gBCXOE,EAXM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACvB,OACC,mCACC,4BAAIA,O,OCHDC,E,MAASC,EAAOC,OAAV,yUA2BGC,EAPS,SAAC,GAAD,IAAEC,EAAF,EAAEA,cAAcC,EAAhB,EAAgBA,iBAAiBC,EAAjC,EAAiCA,aAAjC,OACxB,sBAAKT,UAAU,UAAf,UACQ,cAACG,EAAD,CAAQO,KAAK,SAASC,QAASJ,EAA/B,kBACA,cAACJ,EAAD,CAAQO,KAAK,SAASC,QAASH,EAA/B,qBACA,cAACL,EAAD,CAAQO,KAAK,SAASC,QAASF,EAA/B,qBCZOG,EAZC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACzB,OACC,qCACC,6BAAKD,IACJC,MCiEWC,E,4MAhEbC,MAAQ,CACNrB,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAIPoB,kBAAkB,WAChB,EAAKC,UAAS,SAAAC,GAAS,MAAG,CACtBxB,KAAMwB,EAAUxB,KAAK,O,EAI3ByB,qBAAqB,WACnB,EAAKF,UAAS,SAAAC,GAAS,MAAG,CACtBvB,QAASuB,EAAUvB,QAAQ,O,EAIjCyB,iBAAiB,WACf,EAAKH,UAAS,SAAAC,GAAS,MAAG,CACtBtB,IAAKsB,EAAUtB,IAAI,O,EAQzByB,gCAAkC,WAClC,IAAMC,EAAS,EAAKC,qBAEdC,EAAqB,IADV,EAAKT,MAAdrB,KAC0B4B,EAClC,OAAOG,KAAKC,MAAMF,I,wDATlB,WAAqB,IAAD,EACaG,KAAKZ,MAEtC,OAHoB,EACVrB,KADU,EACJC,QADI,EACKC,M,oBAWzB,WAAS,IAAD,EACyB+B,KAAKZ,MAA5BrB,EADF,EACEA,KAAMC,EADR,EACQA,QAASC,EADjB,EACiBA,IACnBC,EAAQ8B,KAAKJ,qBACbzB,EAAqB6B,KAAKN,kCAE9B,OACE,qCACE,cAAC,EAAD,CACEf,cAAeqB,KAAKX,kBACpBT,iBAAkBoB,KAAKR,qBACvBX,aAAcmB,KAAKP,mBAGrB,cAAC,EAAD,CAASR,MAAM,aAAf,SACa,IAAVf,EAAe,cAAC,EAAD,CAAcI,QAAQ,sBAC1C,cAAC,EAAD,CACCP,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOA,EACPC,mBAAoBA,a,GA1DL8B,IAAMC,WCFb,SAASC,IACtB,OACE,qCACA,uDACE,cAAC,EAAD,OCHNC,IAASC,OAEL,cAACF,EAAD,IAEFG,SAASC,eAAe,W","file":"static/js/main.f717e78c.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst Statistics = ({good,neutral,bad,total,positivePercentage})=>\r\n  (\r\n    <>\r\n      <div className=\"Statistics\">\r\n      <p>\r\n        Good:\r\n        <span> {good}</span>\r\n      </p>\r\n      <p>\r\n        Neutral:\r\n        <span> {neutral}</span>\r\n      </p>\r\n      <p>\r\n        Bad:\r\n        <span> {bad}</span>\r\n      </p>\r\n      <p>\r\n        Total:\r\n        <span> {total}</span>\r\n      </p>\r\n      <p>\r\n        Positive Percentage:\r\n        <span> {positivePercentage}%</span>\r\n      </p>\r\n    </div>\r\n    </>\r\n  )\r\n\r\n  Statistics.propTypes={\r\n  good: PropTypes.number.isRequired,\r\n  neutral: PropTypes.number.isRequired,\r\n  bad: PropTypes.number.isRequired,\r\n  total: PropTypes.number.isRequired,\r\n  positivePercentage: PropTypes.number.isRequired,\r\n  \r\n}\r\n\r\n\r\nexport default Statistics","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Notification = ({ message }) => {\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<p>{message}</p>\r\n\t\t</>\r\n\t);\r\n};\r\nNotification.propTypes = {\r\n\tmessage: PropTypes.string.isRequired\r\n};\r\n\r\nexport default Notification;","import React from 'react';\r\nimport styled from 'styled-components'\r\n\r\nconst Button = styled.button`\r\nborder-style: solid;\r\nborder-width: 1px;\r\npadding: 1px 7px 2px;\r\ntext-rendering: auto;\r\ncolor: initial;\r\ndisplay: inline-block;\r\ntext-align: start;\r\nmargin: 5px;\r\nborder-radius: 5px;\r\n\r\n&:hover { \r\n    background: #1d49aa;\r\n  }\r\n&:focus { \r\n    outline: none;\r\n    box-shadow: 0 0 0 4px #cbd6ee; \r\n}\r\n`;\r\n\r\nconst FeedbackOptions = ({onCounterGood,onCounterNeutral,onCounterBad})=>(\r\n<div className=\"Counter\">\r\n        <Button type=\"button\" onClick={onCounterGood}>Good</Button>\r\n        <Button type=\"button\" onClick={onCounterNeutral}>Neutral</Button>\r\n        <Button type=\"button\" onClick={onCounterBad}>Bad</Button>\r\n</div>\r\n)\r\nexport default FeedbackOptions;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Section = ({ title, children }) => {\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<h2>{title}</h2>\r\n\t\t\t{children}\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nSection.propTypes = {\r\n\ttitle: PropTypes.string.isRequired\r\n};\r\nexport default Section;","import React from 'react'\r\nimport Statistics from '../statistics/Statistics'\r\nimport Notification from '../notification/Notification'\r\nimport FeedbackOptions from '../feedbackOptions/FeedbackOptions'\r\nimport Section from '../section/Section'\r\n\r\nclass Counter extends React.Component {\r\n\r\n  state = {\r\n    good: 0,\r\n    neutral: 0,\r\n    bad: 0,\r\n    \r\n  }\r\n\r\n  handleCounterGood=()=>{\r\n    this.setState(prevState=>({\r\n        good: prevState.good+1,\r\n    }))\r\n    \r\n  }\r\n  handleCounterNeutral=()=>{\r\n    this.setState(prevState=>({\r\n        neutral: prevState.neutral+1,\r\n      \r\n    }))\r\n  }\r\n  handleCounterBad=()=>{\r\n    this.setState(prevState=>({\r\n        bad: prevState.bad+1,\r\n    }))\r\n  }\r\n  countTotalFeedback(){\r\n    const { good, neutral, bad } = this.state;\r\n\t\tconst result = good + neutral + bad;\r\n\t\treturn result;\r\n  };\r\n  countPositiveFeedbackPercentage = () => {\r\n\t\tconst result = this.countTotalFeedback();\r\n\t\tconst { good } = this.state;\r\n\t\tconst percentage = (good * 100) / result;\r\n\t\treturn Math.round(percentage);\r\n\t};\r\n  \r\n  render(){\r\n    const { good, neutral, bad } = this.state;\r\n\t\tconst total = this.countTotalFeedback();\r\n\t\tconst positivePercentage = this.countPositiveFeedbackPercentage();\r\n    \r\n    return(\r\n      <>\r\n        <FeedbackOptions\r\n          onCounterGood={this.handleCounterGood}\r\n          onCounterNeutral={this.handleCounterNeutral}\r\n          onCounterBad={this.handleCounterBad}\r\n        />\r\n      \r\n        <Section title=\"Statistics\">\r\n          {total === 0 ? (<Notification message=\"No feedback given\" />) : (\r\n\t\t\t\t\t\t<Statistics\r\n\t\t\t\t\t\t\tgood={good}\r\n\t\t\t\t\t\t\tneutral={neutral}\r\n\t\t\t\t\t\t\tbad={bad}\r\n\t\t\t\t\t\t\ttotal={total}\r\n\t\t\t\t\t\t\tpositivePercentage={positivePercentage}\r\n\t\t\t\t\t\t/>\r\n\t\t\t  \t)}\r\n        </Section>\r\n      </>\r\n    )\r\n  }\r\n}\r\nexport default Counter","import React from 'react'\nimport Counter from './counter/Counter'\n\n\nexport default function App() {\n  return (\n    <>\n    <h1>Please leave feedback</h1>\n      <Counter/>\n    </>\n  )\n}\n\n\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  \n    <App />,\n  \n  document.getElementById('root')\n);\n\n\n\n\n"],"sourceRoot":""}