{"version":3,"sources":["components/statistics/Statistics.js","components/notification/Notification.js","components/feedbackOptions/FeedbackOptions.js","components/section/Section.js","App.js","index.js"],"names":["Statistics","good","neutral","bad","total","positivePercentage","className","Notification","message","Button","styled","button","FeedbackOptions","options","handleCounter","map","option","type","name","onClick","shortid","generate","Section","title","children","App","state","e","target","setState","prevState","countPositiveFeedbackPercentage","result","countTotalFeedback","percentage","Math","round","this","objKey","Object","keys","React","Component","ReactDOM","render","document","getElementById"],"mappings":"uOAsCeA,EAnCI,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,QAASC,EAAlB,EAAkBA,IAAKC,EAAvB,EAAuBA,MAAOC,EAA9B,EAA8BA,mBAA9B,OACjB,mCACE,sBAAKC,UAAU,aAAf,UACE,sCAEE,qCAAQL,QAEV,yCAEE,qCAAQC,QAEV,qCAEE,qCAAQC,QAEV,uCAEE,qCAAQC,QAEV,qDAEE,qCAAQC,EAAR,gBCTOE,EAZM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OACE,mCACE,4BAAIA,O,iCCDJC,EAASC,IAAOC,OAAV,8VA0CGC,EAtBS,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,QAASC,EAAoB,EAApBA,cAClC,OACE,mCACGD,EAAQE,KAAI,SAAAC,GAAM,OACjB,cAACP,EAAD,CAEEQ,KAAK,SACLC,KAAMF,EACNG,QAASL,EAJX,SAMGE,GALII,IAAQC,kBCfRC,EAZC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACzB,OACC,qCACC,6BAAKD,IACJC,MCDiBC,E,4MACnBC,MAAQ,CACNzB,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPW,cAAgB,SAAAa,GACd,IAAMT,EAAOS,EAAEC,OAAOV,KACtB,EAAKW,UAAS,SAAAC,GAAS,sBACpBZ,EAAOY,EAAUZ,GAAQ,O,EAU9Ba,gCAAkC,WAChC,IAAMC,EAAS,EAAKC,qBAEdC,EAAqB,IADV,EAAKR,MAAdzB,KAC0B+B,EAClC,OAAOG,KAAKC,MAAMF,I,wDAVpB,WAAsB,IAAD,EACYG,KAAKX,MAEpC,OAHmB,EACXzB,KADW,EACLC,QADK,EACIC,M,oBAYzB,WAAU,IAAD,EACwBkC,KAAKX,MAA5BzB,EADD,EACCA,KAAMC,EADP,EACOA,QAASC,EADhB,EACgBA,IACjBC,EAAQiC,KAAKJ,qBACb5B,EAAqBgC,KAAKN,kCAC1BO,EAASC,OAAOC,KAAKH,KAAKX,OAChC,OACE,qCACE,cAAC,EAAD,CAASH,MAAM,wBAAf,SACE,cAAC,EAAD,CACEV,QAASyB,EACTxB,cAAeuB,KAAKvB,kBAGxB,cAAC,EAAD,CAASS,MAAM,aAAf,SACa,IAAVnB,EACC,cAAC,EAAD,CAAcI,QAAQ,sBAEtB,cAAC,EAAD,CACEP,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOA,EACPC,mBAAoBA,a,GAjDDoC,IAAMC,WCDvCC,IAASC,OAEL,cAAC,EAAD,IAEFC,SAASC,eAAe,W","file":"static/js/main.97616b97.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => (\r\n  <>\r\n    <div className=\"Statistics\">\r\n      <p>\r\n        Good:\r\n        <span> {good}</span>\r\n      </p>\r\n      <p>\r\n        Neutral:\r\n        <span> {neutral}</span>\r\n      </p>\r\n      <p>\r\n        Bad:\r\n        <span> {bad}</span>\r\n      </p>\r\n      <p>\r\n        Total:\r\n        <span> {total}</span>\r\n      </p>\r\n      <p>\r\n        Positive Percentage:\r\n        <span> {positivePercentage}%</span>\r\n      </p>\r\n    </div>\r\n  </>\r\n);\r\n\r\nStatistics.propTypes = {\r\n  good: PropTypes.number.isRequired,\r\n  neutral: PropTypes.number.isRequired,\r\n  bad: PropTypes.number.isRequired,\r\n  total: PropTypes.number.isRequired,\r\n  positivePercentage: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default Statistics;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Notification = ({ message }) => {\r\n  return (\r\n    <>\r\n      <p>{message}</p>\r\n    </>\r\n  );\r\n};\r\n\r\nNotification.propTypes = {\r\n  message: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Notification;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport shortid from 'shortid';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Button = styled.button`\r\n  border-style: solid;\r\n  border-width: 1px;\r\n  padding: 1px 7px 2px;\r\n  text-rendering: auto;\r\n  color: initial;\r\n  display: inline-block;\r\n  text-align: start;\r\n  margin: 5px;\r\n  border-radius: 5px;\r\n\r\n  &:hover {\r\n    background: #1d49aa;\r\n  }\r\n  &:focus {\r\n    outline: none;\r\n    box-shadow: 0 0 0 4px #cbd6ee;\r\n  }\r\n`;\r\n\r\nconst FeedbackOptions = ({ options, handleCounter }) => {\r\n  return (\r\n    <>\r\n      {options.map(option => (\r\n        <Button\r\n          key={shortid.generate()}\r\n          type=\"button\"\r\n          name={option}\r\n          onClick={handleCounter}\r\n        >\r\n          {option}\r\n        </Button>\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nFeedbackOptions.propTypes = {\r\n  options: PropTypes.array.isRequired,\r\n  handleCounter: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default FeedbackOptions;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Section = ({ title, children }) => {\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<h2>{title}</h2>\r\n\t\t\t{children}\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nSection.propTypes = {\r\n\ttitle: PropTypes.string.isRequired\r\n};\r\nexport default Section;","import React from 'react';\nimport Statistics from './components/statistics/Statistics';\nimport Notification from './components/notification/Notification';\nimport FeedbackOptions from './components/feedbackOptions/FeedbackOptions';\nimport Section from './components/section/Section';\n\nexport default class App extends React.Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  handleCounter = e => {\n    const name = e.target.name;\n    this.setState(prevState => ({\n      [name]: prevState[name] + 1,\n    }));\n  };\n\n  countTotalFeedback() {\n    const { good, neutral, bad } = this.state;\n    const result = good + neutral + bad;\n    return result;\n  }\n\n  countPositiveFeedbackPercentage = () => {\n    const result = this.countTotalFeedback();\n    const { good } = this.state;\n    const percentage = (good * 100) / result;\n    return Math.round(percentage);\n  };\n\n  render() {\n    const { good, neutral, bad } = this.state;\n    const total = this.countTotalFeedback();\n    const positivePercentage = this.countPositiveFeedbackPercentage();\n    const objKey = Object.keys(this.state);\n    return (\n      <>\n        <Section title=\"Please leave feedback\">\n          <FeedbackOptions\n            options={objKey}\n            handleCounter={this.handleCounter}\n          />\n        </Section>\n        <Section title=\"Statistics\">\n          {total === 0 ? (\n            <Notification message=\"No feedback given\" />\n          ) : (\n            <Statistics\n              good={good}\n              neutral={neutral}\n              bad={bad}\n              total={total}\n              positivePercentage={positivePercentage}\n            />\n          )}\n        </Section>\n      </>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  \n    <App />,\n  \n  document.getElementById('root')\n);\n\n\n\n\n"],"sourceRoot":""}